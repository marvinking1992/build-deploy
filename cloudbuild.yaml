# This file defines the steps to build the application using Google Cloud Build.

# Step 1: Build the Docker image
steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/my-repo/app:$SHORT_SHA', '.']
  id: 'Build Docker Image'
  waitFor: ['-']  # This ensures the step starts immediately. 

# Step 2: Push the Docker image to Google Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/my-repo/app:$SHORT_SHA']
  id: 'Push to Artifact Registry'
  waitFor: ['Build Docker Image']  # This ensures the push only happens after the build step completes.

# Step 3: Update Deployment Configuration
- name: 'alpine/git'  # Using alpine/git to perform git operations
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    git config --global user.email "spacetimecollege@gmail.com" &&
    git config --global user.name "marvinking1992" &&
    (git remote add origin <YOUR_GITHUB_REPO_URL> || true) &&
    git checkout main &&
    git pull origin main --rebase &&
    sed -i 's|us-central1-docker.pkg.dev/$PROJECT_ID/my-repo/app:[^ ]*|us-central1-docker.pkg.dev/$PROJECT_ID/my-repo/app:$SHORT_SHA|' app-deployment.yaml && 
    git commit -am "Update image tag to $SHORT_SHA" &&
    git push --set-upstream origin main
  id: 'Update Deployment Config'
  waitFor: ['Push to Artifact Registry']



# No direct deployment steps to GKE since Cloud Deploy will handle this

# Images list. This section helps in logging the built images for potential deployments or for reference.
images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/my-repo/app:$SHORT_SHA'
